I"'<p>This site is built using the static site generator <a href="https://jekyllrb.com/">Jekyll</a>, the audio files live on <a href="https://aws.amazon.com/s3/">Amazon S3</a> and (for the time being) the site itself is hosted on <a href="https://pages.github.com/">GitHub pages</a>.</p>

<h3 id="why">Why?</h3>

<p>The simple answer is that podcasting relies on a pretty simple technology - RSS. RSS often gets generated for a website almost as a by-product of adding content, this allows people to “subscribe” to your website and be notified or fed updates. Jekyll generates RSS straight out of the box and every podcast needs a website so we thought - why not kill two birds with one stone?</p>

<h3 id="how">How?</h3>

<p>After a bit of a search we stumbled across <a href="http://www.podcastgenerator.net/">Podcast Generator</a> which seemed to be a useful tool and close to what we needed. Doug and Dai over at <a href="http://tidepodcast.org/">TIDE podcast</a> use it and after having played with the setup - it’s quick and easy. There was some concern about placing our audio files up on our webserver though, audio files can be quite large which can impact on traffic allowances. Tim asked around the <a href="https://community.reclaimhosting.com/t/podcasting-with-reclaim/">Reclaim Community</a> and decided to have a go at Jekyll. After an evening of fiddling around the site was up and running. It was generating an RSS feed that complied with iTunes standards and was looking pretty nice too. Tim added a HTML5 player (<a href="https://github.com/Selz/plyr">Plyr</a>) to the post page for each podcast so that people could sample and listen without having to subscribe or download anything. Next step was to move the files into an Amazon S3 bucket, which <a href="https://growthedream.com/host-podcast-files-amazon-s3/">this tutorial</a> covers nicely. The final step was getting a domain name and pointing it at GitHub.</p>

<h3 id="our-process">Our Process</h3>

<p><strong>1.</strong> Record the conversation</p>

<p><strong>2.</strong> Edit and export podcast</p>

<p><strong>3.</strong> Edit metadata</p>

<p><strong>4.</strong> FTP file to Amazon S3 - copy link</p>

<p><strong>5.</strong> Create a new post in Markdown and add in the relevant front matter to the YAML section</p>

<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">layout</span><span class="pi">:</span> <span class="s">post</span>
<span class="na">title</span><span class="pi">:</span> <span class="s2">"</span><span class="s">Title</span><span class="nv"> </span><span class="s">Goes</span><span class="nv"> </span><span class="s">Here"</span>
<span class="na">date</span><span class="pi">:</span> <span class="s">Publishing date and time</span>
<span class="na">file</span><span class="pi">:</span> <span class="s">link to file in S3</span>
<span class="na">summary</span><span class="pi">:</span> <span class="s2">"</span><span class="s">Quick</span><span class="nv"> </span><span class="s">exerpt</span><span class="nv"> </span><span class="s">of</span><span class="nv"> </span><span class="s">episode"</span>
<span class="na">description</span><span class="pi">:</span> <span class="s2">"</span><span class="s">Longer</span><span class="nv"> </span><span class="s">information"</span>
<span class="na">duration</span><span class="pi">:</span> <span class="s2">"</span><span class="s">how</span><span class="nv"> </span><span class="s">long</span><span class="nv"> </span><span class="s">in</span><span class="nv"> </span><span class="s">minutes</span><span class="nv"> </span><span class="s">and</span><span class="nv"> </span><span class="s">seconds"</span> 
<span class="na">length</span><span class="pi">:</span> <span class="s2">"</span><span class="s">in</span><span class="nv"> </span><span class="s">seconds"</span>
<span class="na">explicit</span><span class="pi">:</span> <span class="s2">"</span><span class="s">do</span><span class="nv"> </span><span class="s">we</span><span class="nv"> </span><span class="s">swear"</span> 
<span class="na">keywords</span><span class="pi">:</span> <span class="s2">"</span><span class="s">keyword</span><span class="nv"> </span><span class="s">tags"</span>
<span class="na">block</span><span class="pi">:</span> <span class="s2">"</span><span class="s">hold</span><span class="nv"> </span><span class="s">back</span><span class="nv"> </span><span class="s">publishing</span><span class="nv"> </span><span class="s">it"</span> 
<span class="na">voices</span><span class="pi">:</span> <span class="s2">"</span><span class="s">who</span><span class="nv"> </span><span class="s">did</span><span class="nv"> </span><span class="s">the</span><span class="nv"> </span><span class="s">talking"</span>
</code></pre></div></div>

<p><strong>6.</strong> Add links and show notes to the content section.</p>

<p><strong>7.</strong> Once we’re complete Commit to GitHub</p>

<p><strong>8.</strong> Site and RSS is updated and the new episode is pushed out</p>

<h3 id="can-i-haz">Can I haz?</h3>

<p>The beauty of this set up is that it’s simple - and you can access <a href="https://github.com/timklapdor/link-rot">all the source files over on GitHub</a>. The RSS file pulls information from the config.yml file which has most of the information you need to publish on iTunes. The episode information and file for Plyr are included the Post layout and pulled in from the front matter listed above. All styles can be configured using some basic CSS.</p>

<p>At the moment you’ll need to fork our code to make your own copy - but we’ll make a boilerplate available soon. If this sounds cool and you want to get in touch with us you can via <a href="mailto:linkrot.podcast@gmail.com?subject=I found your website and wanted to say hi!">email</a> or on <a href="http://twitter.com/linkrotpodcast">twitter</a>!</p>

<p>Cheers!</p>
:ET